function renderWeek(date){document.getElementById("week").textContent.replace("Uge ","")!=getWeekNumber(date)&&(document.querySelectorAll(".booking-time").forEach((time=>{time.classList.contains("your-booking")||time.remove()})),insertBookings(date)),document.getElementById("week").textContent="Uge "+getWeekNumber(date),getWeekDates(date).forEach(((day,index)=>{document.getElementById("date"+index).textContent=day}))}document.addEventListener("DOMContentLoaded",(async()=>{const prevArrow=document.getElementById("prev_week");prevArrow.classList.add("arrow-disabled");const nextArrow=document.getElementById("next_week");let currentDate=new Date;nextArrow.addEventListener("click",(()=>{prevArrow.classList.contains("arrow-disabled")&&prevArrow.classList.remove("arrow-disabled"),currentDate.setDate(currentDate.getDate()+7),renderWeek(currentDate)})),prevArrow.addEventListener("click",(()=>{currentDate.setDate(currentDate.getDate()-7),currentDate<new Date&&(currentDate=new Date,prevArrow.classList.add("arrow-disabled")),renderWeek(currentDate)})),renderWeek(currentDate)}));var supabaseData=[];async function insertBookings(currentDate){function getNextSunday(date=new Date){const daysUntilSunday=(7-date.getDay())%7;return date.setDate(date.getDate()+daysUntilSunday),date.setHours(23,59,59,999),date.toISOString()}function getPreviousMonday(date=new Date){const daysSinceMonday=(date.getDay()+6)%7;return date.setDate(date.getDate()-daysSinceMonday+1),date.setHours(0,0,0,0),date.toISOString()}supabaseData=[];const{access_token:access_token}=await adminLogin(),requestBookingResponse=await fetch(`${supabaseUrl}/rest/v1/requestBooking?start_time=gte.${getPreviousMonday(currentDate)}&start_time=lte.${getNextSunday(currentDate)}`,{method:"GET",headers:{"Content-Type":"application/json",apikey:supabaseKey,Authorization:`Bearer ${access_token}`,Prefer:"return=representation"}}),requestBookingData=await requestBookingResponse.json();requestBookingResponse.ok?requestBookingData.forEach((item=>{const day=new Date(item.start_time).toLocaleString("en",{weekday:"long"}).toLowerCase(),start_time=item.start_time.split("T")[1].slice(0,-3),duration=item.duration;supabaseData.push(item),addTimeToKaldender(day,start_time,duration,!1,"#eeb579","R"+item.id),insertBookingInfo(item)})):console.error("Fetch failed:",requestBookingData);const acceptedBookingResponse=await fetch(`${supabaseUrl}/rest/v1/acceptedBooking?start_time=gte.${getPreviousMonday(currentDate)}&start_time=lte.${getNextSunday(currentDate)}`,{method:"GET",headers:{"Content-Type":"application/json",apikey:supabaseKey,Authorization:`Bearer ${access_token}`,Prefer:"return=representation"}}),acceptedBookingData=await acceptedBookingResponse.json();acceptedBookingResponse.ok?acceptedBookingData.forEach((item=>{const day=new Date(item.start_time).toLocaleString("en",{weekday:"long"}).toLowerCase(),start_time=item.start_time.split("T")[1].slice(0,-3),duration=item.duration;supabaseData.push(item),addTimeToKaldender(day,start_time,duration,!1,"#1a2663","A"+item.id)})):console.error("Fetch failed:",acceptedBookingData)}function serviceNameAndCounts(services){const counts={};services.forEach((item=>{counts[item.service]=(counts[item.service]||0)+1}));let returnString="";for(const[service,count]of Object.entries(counts))returnString+=`${service} x ${count} <br>`;return returnString}function dateToString(date){return`${(date=new Date(date)).getDate()} ${date.toLocaleString("en",{month:"short"})}, ${date.getFullYear()} kl. ${date.getHours().toString().padStart(2,"0")}:${date.getMinutes().toString().padStart(2,"0")}`}function insertBookingInfo(item,requested=!0){const appendIn=requested?document.getElementById("requested"):document.getElementById("accepteret"),booking=`\n    <div>\n        <div>\n            <span>\n                <p>ID${requested?"R"+item.id:"A"+item.id}</p>\n                <p>${dateToString(item.start_time)}</p>\n            </span>\n            <span>\n                <div></div>\n                <div></div>\n            </span>\n        </div>\n        <div>\n            <div>\n                <div>\n                    <p>${serviceNameAndCounts(item.services)}</p>\n                    <p>${item.message}</p>\n                </div>\n                <div>\n                    <p>Adresse:</p>\n                    <p>${item.adress}</p>\n                </div>\n            </div>\n            <div>\n                <p>${item.name}</p>\n                <div>\n                    <p>Udk√∏rsel:</p>\n                    <p>${item.location_for_work}</p>\n                </div>\n                <div>\n                    <p>Kontakt:</p>\n                    <p>${item.tlf}</p>\n                    <p>${item.email}</p>\n                </div>\n            </div>\n        </div>\n    </div>`;appendIn.innerHTML+=booking}